---

- become: yes
  tags: [ mysql ]
  block:

# if external repos are required, that has to be done before the main
# package installing phase....
  - yum:
      name: "{{ mysql_external_repo }}"
      state: present
    when: "'external_repo' in mysql_ver"
    tags:
        - packages

  ##    __  __            _
  ##   |  \/  | __ _ _ __(_) __ _
  ##   | |\/| |/ _` | '__| |/ _` |
  ##   | |  | | (_| | |  | | (_| |
  ##   |_|  |_|\__,_|_|  |_|\__,_|
  ##

  - tags: maria
    when:
      - "'external_repo_template' in mysql_ver"
      # - "mysql_external_repo_template == ''"
    block:
      - name: install the maria repos
        template:
          src: "repo/{{ mysql_external_repo_template }}.repo"
          dest: "/etc/yum.repos.d/{{ mysql_external_repo_template }}.repo"

  #     ____                                      _ _
  #    / ___|___  _ __ ___  _ __ ___  _   _ _ __ (_) |_ _   _
  #   | |   / _ \| '_ ` _ \| '_ ` _ \| | | | '_ \| | __| | | |
  #   | |__| (_) | | | | | | | | | | | |_| | | | | | |_| |_| |
  #    \____\___/|_| |_| |_|_| |_| |_|\__,_|_| |_|_|\__|\__, |
  #                                                     |___/

  # The mySQL community repos has a bunch of enabled and disabled repos
  # need to switch to the current release branch....

      # this is hard coded to disable/enable in the mysql community version
  - name: Disable any repos providing higher versions of packages
    ini_file:
      dest: /etc/yum.repos.d/mysql-community.repo
      section: "{{ item }}"
      option: enabled
      value: 0
    with_items: "{{ mysql_disable_repos }}"
    when: "'disable_repos' in mysql_ver"
    tags:
        - packages
        - repos

  - name: Enable any required non-default repos
    ini_file:
      dest: /etc/yum.repos.d/mysql-community.repo
      section: "{{ item }}"
      option: enabled
      value: 1
    with_items: "{{ mysql_enable_repos }}"
    when: "'enable_repos' in mysql_ver"
    tags:
        - packages

  # - name: install EPEL for CentOS
  #   action: >
  #     {{ ansible_pkg_mgr }} name={{ item }} state=present
  #   with_items:
  #     - epel-release
  #   tags:
  #       - packages

  - name: any erase packages...
    shell: |
        rpm -q {{ item }} 2>/dev/null  && \
        {
          echo "is installed, uninstalling"
          rpm -evh {{ item }}
        } || \
        {
          echo "didn't find the package"
        }
    with_items:
      - "{{ mysql_erase_packages }}"
    when: "'erase_packages' in mysql_ver"
    register: mysql_package_erase
    tags:
        - packages

  - name: install mysql_package
    action: >
      {{ ansible_pkg_mgr }} name={{ item }} state=present
    with_items:
      - "{{ mysql_packages }}"
    register: mysql_package_installed
    tags:
        - packages

  #    ____       _                    _
  #   / ___|  ___| |  _ __   __ _  ___| | ____ _  __ _  ___  ___
  #   \___ \ / __| | | '_ \ / _` |/ __| |/ / _` |/ _` |/ _ \/ __|
  #    ___) | (__| | | |_) | (_| | (__|   < (_| | (_| |  __/\__ \
  #   |____/ \___|_| | .__/ \__,_|\___|_|\_\__,_|\__, |\___||___/
  #                  |_|                         |___/

  # if the package came from scl, it needs to be enabled by sourcing
  - name: enable scl package - https://access.redhat.com/solutions/527703
    copy:
      content: |
          #!/bin/bash
          source scl_source enable {{ mysql_scl_name }}
      dest: "/etc/profile.d/{{ mysql_scl_name }}.sh"
      owner: root
      group: root
      mode: 0775
    when: "'scl_package' in mysql_ver"
    tags: [ packages ]

  # if we have a scl_package name, we need to know the client bin path...??
  - assert:
      that:
        - "'client_bin_path' in  mysql_ver"
    when: "'scl_package' in mysql_ver"

  # binaries are not added to sudo path if sudo doesn't source /etc/profile.d
  - file:
      src: "{{ mysql_client_bin_path }}/{{ item }}"
      dest: "/bin/{{ item }}"
      state: link
    with_items:
      - mysql
      - mysqladmin
      # - mysqlimport
      # - mysql_upgrade
      # - mysqldump
      - mysql_config
    when: "'scl_package' in mysql_ver"
    tags: [ tools ]

  ##
  ##    _ __  ___ _ _ _ __  ___
  ##   | '_ \/ -_) '_| '  \(_-<
  ##   | .__/\___|_| |_|_|_/__/
  ##   |_|

  # in the case of sclo mysql55 this might be something like
  # /opt/rh/mysql55/root/etc/mysql
  - name: "fix ownership of mysql config dir {{ mysql_config_dir  }}"
    file:
      state: directory
      name: "{{ mysql_config_dir }}"
      owner: "{{ mysql_user }}"
      group: "{{ mysql_group }}"
    # when: mysql_running_baseline

  - file:
      name: "{{ mysql_log_dir }}"
      state: directory
      owner: "{{ mysql_user }}"
      group: "{{ mysql_group }}"
      mode: 0775
    when: mysql_running_baseline

      # is this a good idea, I think it will fuck up gem
  - name: Force upgrade of pip on CentOS-6
    pip:
      name: pip
      version: '9.0.1'
    tags: [ packages ]
    when:
      - "ansible_distribution_major_version == '6'"

      # on Centos-6, if we install 5.6 or greater, and want to configure it
      # with mysql modules, MySQL-python needs to be upgraded..
      # this is possibly only limited to specific authentication plugin settings
  - name: install version of MySQL-python==1.2.5 compitable with new mysql
    pip:
      name: MySQL-python
      version: 1.2.5
    when:
      - mysql_requested_version |version_compare('5.6', '>=', strict=True)
      - mysql_requested_version |version_compare('8.0', '<', strict=True)
      - "ansible_distribution_major_version == '6'"
    tags: [ packages ]

  - name: install mysqlclient (1.3.12)
    pip:
      name: git+https://github.com/PyMySQL/mysqlclient-python.git
      version: 1.3.12
    when:
      - mysql_requested_version |version_compare('8.0', '>', strict=True)
      - "ansible_distribution_major_version == '6'"
    tags: [ packages ]

  - name: version compare is
    debug:
      msg: "version compare is {{ mysql_requested_version|version_compare('5.6', '>', True) }}"
    tags: [ debug ]

  - name: "set perms on {{ mysql_config_dropin }} directory"
    file:
      state: directory
      name: "{{ mysql_config_dropin }}"
      owner: "{{ mysql_user }}"
      group: "{{ mysql_group }}"
      mode: 0770
    tags: [ config ]
    when: mysql_running_baseline

  - name: disable password expiry
    template:
      src: configs/password_expiry_disable.cnf
      dest: "{{ mysql_config_dropin }}/password_expiry_disable.cnf"
      owner: "{{ mysql_user }}"
      group: "{{ mysql_group }}"
      mode: 0640
    notify:
      - restart mysql
    tags: [ config ]

  - name: make and set perms on /etc/mysql
    file:
      state: directory
      name: "/etc/mysql"
      owner: "{{ mysql_user }}"
      group: "{{ mysql_group }}"
      mode: 0770
    when: mysql_running_baseline

  - name: config stuff
    template:
      src: configs/mysql_community_5_7_my.cnf
      dest: "{{ mysql_alt_config_file }}"
      owner: "{{ mysql_user }}"
      group: "{{ mysql_group }}"
      mode: 0660
    notify:
      - restart mysql
    tags: [ config ]
    when: mysql_running_baseline

  # work-around
  - name: "ensure !includedir {{ mysql_config_dropin }}"
    lineinfile:
      dest: "{{ mysql_config_file }}"
      regexp: '^!includedir\s+{{ mysql_config_dropin }}'
      line: '!includedir {{ mysql_config_dropin }}'
      state: present
      insertafter: EOF

  # more work-around-around
  # - name: "ensure !includedir {{ mysql_config_dropin }}"
  #   lineinfile:
  #     dest: "/etc/my.cnf"
  #     regexp: '^!includedir\s+{{ mysql_config_dropin }}'
  #     line: '!includedir {{ mysql_config_dropin }}'
  #     state: present
  #     insertafter: EOF
  #   when: mysql_service_alias

  - file:
      src: /etc/init.d/mysql55-mysqld
      dest: /etc/init.d/mysqld
      state: link
    when: mysql_service_alias

  - name: make and set perms on /var/log/mysql
    file:
      name: "/var/log/mysql"
      state: directory
      owner: "{{ mysql_user }}"
      group: "{{ mysql_group }}"
      mode: 0770
    when: mysql_running_baseline

  - name: "make and set perms on {{ mysql_log_file }}"
    file:
      name: "{{ mysql_log_file }}"
      state: touch
      owner: "{{ mysql_user }}"
      group: "{{ mysql_group }}"
      mode: 0660
    when: mysql_running_baseline

  - name: make and set perms on /etc/my.cnf
    file:
      name: "{{ mysql_config_file }}"
      state: touch
      owner: root
      group: root
      mode: 0660
    when: mysql_running_baseline

#drwxr-xr-x.  2 mysql   mysql 4.0K Jan 26  2017 mysql

  # - name: "make and set perms on {{ mysql_data_dir }}"
  #   file:
  #     name: "{{ mysql_data_dir }}"
  #     state: directory
  #     owner: "{{ mysql_user }}"
  #     group: "{{ mysql_group }}"
  #     mode: 0770

  # - name: "make dirs 0750 on {{ mysql_data_dir }}"
  #   command: find "{{ mysql_data_dir }}" -type d ! -perm {{ item }} -exec chmod {{ item }} {} \;
  #   with_items:
  #     - "0750"

  # - name: "make files 0640 in {{ mysql_data_dir }}"
  #   command: find "{{ mysql_data_dir }}" -type f ! -perm {{ item }} -exec chmod {{ item }} {} \;
  #   with_items:
  #     - "0640"

  # a bit like emisions testing. This is here to pass the mysql-baseline profile
  # inspec profile, even though some variations, such as maria, don't log here
  - name: make and set perms on /var/log/mysqld.log
    file:
      name: "/var/log/mysqld.log"
      state: touch
      owner: "{{ mysql_user }}"
      group: "{{ mysql_group }}"
      mode: 0660
    when: mysql_running_baseline

  - name: make and set perms on /etc/my.cnf
    file:
      name: /etc/my.cnf
      state: touch
      # owner: "{{ mysql_user }}"
      # group: "{{ mysql_group }}"
      owner: root
      group: root
      mode: 0660
    when: mysql_running_baseline

  #    _       _ _         __ _ _
  #   (_)_ __ (_) |_      / _(_) | ___
  #   | | '_ \| | __|____| |_| | |/ _ \
  #   | | | | | | ||_____|  _| | |  __/
  #   |_|_| |_|_|\__|    |_| |_|_|\___|
  #

  # creating an init-file allows effectively skip-grant tables access at each startup

  #2018-02-23T02:13:02.399855Z         1 Query     INSERT INTO mysql.plugin (name, dl) VALUES ('validate_password', 'validate_password.so');

# ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'test';
  - name: generate the init.sql which runs on every server start
    template:
      src: "{{ item }}"
      dest: "{{ mysql_config_dir }}/mysql_init.sql"
      owner: "{{ mysql_user }}"
      group: "{{ mysql_group }}"
      mode: 0660
    with_first_found:
    - files:
      - "templates/init_files/{{ mysql_fork }}-{{ mysql_requested_version|string|replace('.','') }}.sql"
      - "templates/configs/init_sql.sql"
    when: mysql_handle_setup_with_init_sql
    tags: [ config ]
    register: init_sql_updated
    notify:
      - restart mysql

  - name: force all notified handlers to run at this point
    meta: flush_handlers
