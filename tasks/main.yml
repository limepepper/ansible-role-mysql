---

- tags: [ mysql ]
  become: yes
  block:

    # boilerplate
  - name: bootstrap enough that ansible can run most ansible modules
    include_tasks: "bootstrap/main.yml"
    when: bootstrap_done is not defined
    tags: [ bootstrap ]

    # boilerplate
  - include_tasks: bootstrap/distro-vars-import-profile2.yml
    tags: always

    ## START OF MAIN TASKS SECTION ##

  - debug:
      var: mysql_root_password

  - debug:
      msg: |
        {{ store_path }}/{{ inventory_hostname }}/mysql/root_pass
        {{ mysql_root_password | default('not defined') }}

  - name: generate a complex password for root
    set_fact:
      mysql_root_password: "{{ lookup('complex_password',
      '{{ store_path }}/{{ inventory_hostname }}/mysql/root_pass length=15 chars=ascii_lowercase,ascii_uppercase,digits,#][()<>?@£~:;') }}"
    when: mysql_root_password is not defined
    # if the password was generated, we will need to restart mysql service
    # immediately to force mysql to pick it up
    register: mysql_root_password_generated
    tags: always

  - debug:
      msg: |
        {{ store_path }}/{{ inventory_hostname }}/mysql/root_pass
        {{ lookup('file', store_path + '/' + inventory_hostname + '/mysql/root_pass') }}

  - name: generate a complex password for ansible_dba
    set_fact:
      mysql_dba_password: "{{ lookup('complex_password',
      '{{ store_path }}/{{ inventory_hostname }}/mysql/mysql_dba_password length=15 chars=ascii_lowercase,ascii_uppercase,digits,#][()<>?@£~:;') }}"
    when: mysql_dba_password is not defined
    tags: always

  - name: need to persist the mysql_dba_user value for tests
    set_fact:
      mysql_dba_user: "{{ mysql_dba_user }}"
    tags: always

    # setup the root user
  - include_tasks: opt/configure/root.yml
    tags: always

  - debug:
      var: mysql_install

  - include_tasks: install/main.yml
    when: mysql_install
    tags: always

  - debug:
      var: limepepper_mysql

    ## END OF MAIN TASKS SECTION ##

